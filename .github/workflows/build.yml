name: Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

jobs:
  integration-tests:
    name: IT
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sqVersion:
          - LATEST_RELEASE[9.9]
          - LATEST_RELEASE[10.4]
          - SNAPSHOT
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew build publishToMavenLocal -x dokkaJavadoc -x test --refresh-dependencies

      - name: Build custom rules example
        run: ./gradlew build -p plsql-custom-rules

      - if: matrix.sqVersion != 'SNAPSHOT'
        name: Run integration test
        run: ./gradlew integrationTest -Dsonar.runtimeVersion=${{ matrix.sqVersion }} --info

      - if: matrix.sqVersion == 'SNAPSHOT'
        name: Run integration test
        run: |
          SQ_VERSION=10.5
          curl -s -L "https://nexus.felipezorzo.com.br/service/rest/v1/search/assets/download?repository=maven-snapshots&maven.groupId=org.sonarsource.sonarqube&maven.artifactId=sonar-application&maven.extension=zip&sort=version&maven.baseVersion=$SQ_VERSION-SNAPSHOT" \
            -u "$AUTH_REPOSITORY" \
            -o sonar-zpa-plugin/sonar-application-$SQ_VERSION.zip
          ./gradlew integrationTest -Dsonar.zipFile=sonar-application-$SQ_VERSION.zip --info
        env:
          AUTH_REPOSITORY: ${{ secrets.AUTH_REPOSITORY }}

  windows-build:
    name: Test on Windows
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew test

  linux-build:
    name: Build and release
    needs: [integration-tests, windows-build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Build with Gradle
        run: ./gradlew build --refresh-dependencies

      - if: github.ref == 'refs/heads/main'
        name: Run SonarQube Scanner
        run: ./gradlew sonar --info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - if: github.ref == 'refs/heads/main'
        name: Release artifacts
        run: ./gradlew publish jreleaserFullRelease
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_signingKey: ${{ secrets.GPG_SECRET_KEY }}
          ORG_GRADLE_PROJECT_signingPassword: ${{ secrets.GPG_KEY_PASSWORD }}
