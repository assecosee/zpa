strategy:
  matrix:
    linux:
      imageName: 'ubuntu-latest'
    it-min:
      imageName: 'ubuntu-latest'
      sq_version: 7.6
      jdkVersion: 1.8
    it-latest:
      imageName: 'ubuntu-latest'
      sq_version: LATEST
      jdkVersion: 1.11
    it-dev:
      imageName: 'ubuntu-latest'
      sq_version: DEV
      jdkVersion: 1.11
    windows:
      imageName: 'windows-latest'

pool:
  vmImage: $(imageName)

variables:
  GRADLE_USER_HOME: $(Pipeline.Workspace)/.cache/.gradle
  SONAR_USER_HOME: $(Pipeline.Workspace)/.cache/.sonar
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/main')]

steps:
  - checkout: self
    submodules: recursive

  - task: Cache@2
    inputs:
      key: 'gradle | "$(Agent.OS)" | "${sq_version}" | azure-pipelines.yaml, **/build.gradle.kts, !its/sources/**'
      path: $(Pipeline.Workspace)/.cache

  - task: Gradle@2
    displayName: Build ZPA
    inputs:
      tasks: 'build publishToMavenLocal'
      options: '--build-cache'

  - task: Gradle@2
    displayName: Build example of custom plugin
    condition: and(succeeded(), startsWith(variables['System.JobName'], 'it-'))
    inputs:
      tasks: 'build -p plsql-custom-rules'

  - task: Gradle@2
    displayName: Run integration tests
    condition: and(succeeded(), startsWith(variables['System.JobName'], 'it-'))
    inputs:
      tasks: 'test -Pit'
      options: '--build-cache'
      jdkVersionOption: $(jdkVersion)

  - task: SonarQubePrepare@4
    displayName: Prepare SonarQube analysis
    condition: and(succeeded(), eq(variables.isMain, 'true'), eq(variables['System.JobName'], 'linux'))
    inputs:
      SonarQube: 'SonarQube'
      scannerMode: 'Other'

  - task: Gradle@2
    displayName: Run SonarQube analysis
    condition: and(succeeded(), eq(variables.isMain, 'true'), eq(variables['System.JobName'], 'linux'))
    inputs:
      tasks: 'build'
      options: '--build-cache -Dsonar.branch.name='
      sonarQubeRunAnalysis: true

  - task: Gradle@2
    displayName: Publish artifacts
    condition: and(succeeded(), eq(variables.isMain, 'true'), eq(variables['System.JobName'], 'linux'))
    inputs:
      tasks: '--build-cache publish'
    env:
      DEPLOY_TOKEN: $(DEPLOY_TOKEN)
      DEPLOY_USERNAME: $(DEPLOY_USERNAME)

  - script: |
      # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
      ./gradlew --stop
