jobs:
  - job: Linux
    pool:
      vmImage: 'ubuntu-latest'

    variables:
      GRADLE_USER_HOME: $(Pipeline.Workspace)/.cache/.gradle

    strategy:
      matrix:
        CI:
          TESTS: ci
        ITS-MIN:
          TESTS: it
          SQ_VERSION: 7.6
        ITS-LATEST:
          TESTS: it
          SQ_VERSION: LATEST_RELEASE
        ITS-NEXT:
          TESTS: it
          SQ_VERSION: DEV

    steps:
      - task: Cache@2
        inputs:
          key: 'gradle | "$(Agent.OS)" | "$(TESTS)" | "$(SQ_VERSION)" | azure-pipelines.yaml, **/build.gradle.kts'
          path: $(Pipeline.Workspace)/.cache

      - script: |
          ./ci.sh
        displayName: 'Build'
        env:
          DEPLOY_TOKEN: $(DEPLOY_TOKEN)
          DEPLOY_USERNAME: $(DEPLOY_USERNAME)

  - job: Windows
    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
    pool:
      vmImage: 'windows-latest'

    variables:
      GRADLE_USER_HOME: $(Pipeline.Workspace)\.cache\.gradle
      SONAR_USER_HOME: $(Pipeline.Workspace)\.cache\.sonar

    steps:
      - task: Cache@2
        inputs:
          key: 'gradle | "$(Agent.OS)" | azure-pipelines.yaml, **/build.gradle.kts, !its/sources/**'
          path: $(Pipeline.Workspace)\.cache
        
      - task: SonarQubePrepare@4
        inputs:
          SonarQube: 'SonarQube'
          scannerMode: 'Other'

      - task: Gradle@2
        inputs:
          gradleWrapperFile: 'gradlew'
          tasks: 'build jacocoTestReport'
          options: '--build-cache -Dsonar.branch.name='
          jdkVersionOption: 1.11
          sonarQubeRunAnalysis: true

      - script: |
          # stop the Gradle daemon to ensure no files are left open (impacting the save cache operation later)
          ./gradlew --stop
